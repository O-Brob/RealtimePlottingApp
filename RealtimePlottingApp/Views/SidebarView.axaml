<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewmodel="clr-namespace:RealtimePlottingApp.ViewModels"
             xmlns:converters="clr-namespace:RealtimePlottingApp.Converters"
             mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="450"
             x:Class="RealtimePlottingApp.Views.SidebarView"
             x:DataType="viewmodel:SidebarViewModel">
    
    <!-- Set Data Context -->
    <UserControl.DataContext>
        <viewmodel:SidebarViewModel />
    </UserControl.DataContext>
    
    <!-- Set Hex Converter for filtering CAN IDs by HEX -->
    <UserControl.Resources>
        <converters:HexConverter x:Key="HexConverter"/>
    </UserControl.Resources>
    
    <!--  SIDEBAR DEFINITION  -->
    <Border Background="#EEEEEE" 
            Margin="5" 
            Padding="5" 
            CornerRadius="5"
            IsVisible="{Binding ShowSidebar}">
        <Border.Effect>
            <DropShadowEffect Color="Black" 
                              Opacity="0.1" 
                              BlurRadius=""/>
        </Border.Effect>
                
        <TabControl HorizontalAlignment="Center"
                    Margin="0"
                    Padding="0">
                
            <TabItem Header="COM Config"
                     FontSize="12"
                     FontWeight="SemiBold">
                
                <Grid RowDefinitions="Auto, Auto, Auto, Auto, *, Auto">
                    <Label FontFamily="Segoe UI" 
                           Grid.Row="0" 
                           HorizontalAlignment="Center" 
                           FontWeight="SemiBold">
                        
                        Communication Interface:
                    </Label>

                    <!-- ComboBox to select CAN or UART -->
                    <ComboBox Grid.Row="1" 
                              SelectedIndex="0"
                              SelectedItem="{Binding SelectedCommunicationInterface}"
                              MaxDropDownHeight="100" 
                              HorizontalAlignment="Center" 
                              Margin="0,5,0,0" 
                              Width="85"
                              IsEnabled="{Binding CommSelectorEnabled}">
                        <ToolTip.Tip>
                            The communication interface from which data will be read.
                        </ToolTip.Tip>
                        
                        <ComboBoxItem>CAN</ComboBoxItem>
                        <ComboBoxItem>UART</ComboBoxItem>
                    </ComboBox>
                    
                    <!-- Elements to show if CAN is selected -->
                    <StackPanel Grid.Row="2"
                                IsVisible="{Binding IsCanSelected}">
                        
                        <!-- CAN Interface: -->
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="0,10,0,0">
                            CAN Interface:
                        </TextBlock>
                        <TextBox Watermark="e.g. PCAN-USB1, can0"
                                 Margin="0,5,0,0"
                                 Text="{Binding CanInterfaceInput}"
                                 IsEnabled="{Binding CommSelectorEnabled}">
                            <ToolTip.Tip>
                                The name of the CAN interface used to receive data.
                            </ToolTip.Tip>
                        </TextBox>
                        
                        <!-- Bit rate -->
                        
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="0,10,0,0">
                            Bit rate:
                        </TextBlock>
                        <ComboBox SelectedIndex="0"
                                  HorizontalAlignment="Stretch" 
                                  Margin="0,5,0,0" 
                                  IsEnabled="{Binding CanBitrateEnabled}"
                                  SelectedItem="{Binding SelectedBitRate}">
                            <ComboBoxItem>5 kBit/s</ComboBoxItem><ComboBoxItem>10 kBit/s</ComboBoxItem>
                            <ComboBoxItem>20 kBit/s</ComboBoxItem><ComboBoxItem>33 kBit/s</ComboBoxItem>
                            <ComboBoxItem>47 kBit/s</ComboBoxItem><ComboBoxItem>50 kBit/s</ComboBoxItem>
                            <ComboBoxItem>83 kBit/s</ComboBoxItem><ComboBoxItem>95 kBit/s</ComboBoxItem>
                            <ComboBoxItem>100 kBit/s</ComboBoxItem><ComboBoxItem>125 kBit/s</ComboBoxItem>
                            <ComboBoxItem>250 kBit/s</ComboBoxItem><ComboBoxItem>500 kBit/s</ComboBoxItem>
                            <ComboBoxItem>800 kBit/s</ComboBoxItem><ComboBoxItem>1 MBit/s</ComboBoxItem>
                            <ToolTip.Tip>
                                Selection of standard bit rates for PEAK CAN.
                                Defines the standard rate at which the data is read.
                                On Linux, this is set via SocketCAN, and not the UI. 
                            </ToolTip.Tip>
                        </ComboBox>
                        
                        <!-- CAN ID Filter -->
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="0,10,0,0">
                            CAN ID Filter:
                        </TextBlock>
                        <TextBox Watermark="e.g. 384 or 0x180"
                                 Margin="0,5,0,0"
                                 IsEnabled="{Binding CommSelectorEnabled}">
                            <TextBox.Text>
                                <Binding Path="CanIdFilter"
                                         Mode="TwoWay"
                                         Converter="{StaticResource HexConverter}"
                                         UpdateSourceTrigger="PropertyChanged"/>
                            </TextBox.Text>
                            <ToolTip.Tip>
                                Enter a CAN ID to filter by.
                                ID can be entered as decimal, or hex (0x...)
                            </ToolTip.Tip>
                        </TextBox>


                        <!-- MaskedTextBox for 8 Byte Data Input -->
                        <TextBlock HorizontalAlignment="Center" Margin="0,10,0,0">
                            CAN Data Variable Mask:
                        </TextBlock>
                        
                        <Border BorderBrush="Black" BorderThickness="1" Padding="5">
                            <MaskedTextBox Mask="##:##:##:##:##:##:##:##" 
                                           FontSize="14" 
                                           HorizontalAlignment="Center" 
                                           Margin="10,5,10,5"
                                           Watermark="Enter CAN Data (8 bytes)"
                                           Text="{Binding CanDataMask}"
                                           IsEnabled="{Binding CommSelectorEnabled}">
                                <ToolTip.Tip>
                                    <TextBlock>
                                        Enter a mask for the HEX values representing 
                                        the 8 bytes of CAN data, with the following formatting:
                                        
                                        <LineBreak/>
                                        
                                        <TextBlock Margin="5,5,0,0">
                                            <Run Text="Numbers [1..9]" FontWeight="Bold"/> 
                                            Represents a variable mask <LineBreak />
                                            for variables [1..9]
                                        </TextBlock>
                                        
                                        <LineBreak/> <LineBreak />
                                        Example: 11:__:22:2_:__:33:__:33 <LineBreak />
                                        This will mask byte 1 as Var 1,<LineBreak /> 
                                        byte 3 + half of byte 4 (12 bits) as Var 2, <LineBreak />
                                        and byte 6 + 8 (16 bits) as Var 3
                                        <LineBreak /><LineBreak />
                                        For each variable n outside of variable 1, <LineBreak />
                                        the variable n-1 must also be defined in the mask.
                                    </TextBlock>
                                </ToolTip.Tip>
                            </MaskedTextBox>
                        </Border>
                    </StackPanel>
                    
                    <!-- Elements to show if UART is selected -->
                    <StackPanel Grid.Row="3"
                                IsVisible="{Binding IsUartSelected}">
                        <!-- COM Port: -->
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="0,10,0,0">
                            COM Port:
                        </TextBlock>
                        <TextBox Watermark="e.g. COM1, /dev/ttyS0"
                                 Margin="0,5,0,0"
                                 Text="{Binding ComPortInput}"
                                 IsEnabled="{Binding CommSelectorEnabled}">
                            <ToolTip.Tip>
                                The name of the serial port interface used to receive UART data.
                                If connections are refused, ensure the current user account on PC has
                                the privileges required to access the port.
                            </ToolTip.Tip>
                        </TextBox>
                        
                        <!-- Baud rate -->
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="0,10,0,0">
                            Baud rate:
                        </TextBlock>
                        <NumericUpDown Watermark="e.g. 115200"
                                       Increment="100"
                                       Minimum="0"
                                       Maximum="999999999"
                                       Margin="0,5,0,0"
                                       Value="{Binding BaudRateInput}"
                                       IsEnabled="{Binding CommSelectorEnabled}">
                            <ToolTip.Tip>
                                A Baud Rate which matches that of the data sender.
                                Defines the rate at which the data is transferred.
                            </ToolTip.Tip>
                        </NumericUpDown>
                        
                        <!-- Number of unique variables -->
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="0,10,0,0">
                            Unique variables:
                        </TextBlock>
                        <NumericUpDown Value="{Binding UniqueVariableCount}"
                                       Increment="1"
                                       Minimum="1"
                                       Maximum="50"
                                       Margin="0,5,0,0"
                                       IsEnabled="{Binding CommSelectorEnabled}">
                            <ToolTip.Tip>
                                The number of unique data variables that are to be received alongside
                                a timestamp, each being plotted with its own line.
                                
                            </ToolTip.Tip>
                        </NumericUpDown>
                        
                        <!-- Payload Data Size: -->
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="0,10,0,0">
                            Payload data size:
                        </TextBlock>
                        <ComboBox SelectedIndex="0"
                                  SelectedItem="{Binding SelectedDataSize}"
                                  MaxDropDownHeight="100"
                                  HorizontalAlignment="Stretch"
                                  Margin="0,5,0,0">
                            <ToolTip.Tip>
                                The bit-size of the data variables to be received from the UART.
                                Each unique variable is expected to be of this data size.
                            </ToolTip.Tip>
                            
                            <ComboBoxItem>8 bits</ComboBoxItem>
                            <ComboBoxItem>16 bits</ComboBoxItem>
                            <ComboBoxItem>32 bits</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                    
                    <!-- Connect Button: -->
                    <Button Grid.Row="5"
                            HorizontalAlignment="Center"
                            Margin="0,0,0,10"
                            IsEnabled="{Binding IsConnectReady}"
                            Command="{Binding ConnectButtonCommand}"
                            Content="{Binding ConnectButtonText}">
                        <ToolTip.Tip>
                            <StackPanel>
                                <TextBlock Margin="0,0,0,15">
                                    Connect: Attempts to connect to the communication 
                                    interface with the given config.
                                </TextBlock>
                                <TextBlock>
                                    Disconnect: Stops the connection, plotting, 
                                    and enters "History Mode" for the plot.
                                </TextBlock>
                            </StackPanel>
                        </ToolTip.Tip>
                        
                    </Button>
                </Grid>
            </TabItem>
    
            <TabItem Header="Plot Config"
                     FontSize="12"
                     FontWeight="SemiBold">
                <Grid RowDefinitions="Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto, *">
                    
                    <!-- X-Axis Variable Range Selector -->
                    <Label FontFamily="Segoe UI" 
                           Grid.Row="0" 
                           HorizontalAlignment="Center" 
                           FontWeight="SemiBold">
                        
                        Number of points to show:
                    </Label>
                    
                    <NumericUpDown Grid.Row="1"
                               HorizontalAlignment="Center"
                               Value="{Binding VariableAmountSlider}"
                               Minimum="50"
                               Maximum="10000"
                               ShowButtonSpinner="False"></NumericUpDown>
                    
                    <Slider Grid.Row="2"
                            x:Name="VariableAmountSlider"
                            Minimum="50"
                            Maximum="10000"
                            Value="{Binding VariableAmountSlider}"
                            IsSnapToTickEnabled="True"
                            TickFrequency="10">
                    </Slider>
                    
                    <!-- Update Frequency Selector -->
                    <Label FontFamily="Segoe UI" 
                           Grid.Row="3" 
                           HorizontalAlignment="Center" 
                           FontWeight="SemiBold">
                        
                        Update frequency (ms):
                    </Label>
                    
                    <NumericUpDown Grid.Row="4"
                                   HorizontalAlignment="Center"
                                   Value="{Binding UpdateFrequencySlider}"
                                   Minimum="5"
                                   Maximum="1000"
                                   ShowButtonSpinner="False"></NumericUpDown>
                    
                    <Slider Grid.Row="5"
                            x:Name="UpdateFrequencySlider"
                            Minimum="5"
                            Maximum="1000"
                            Value="{Binding UpdateFrequencySlider}"
                            IsSnapToTickEnabled="True"
                            TickFrequency="10">
                    </Slider>
                    
                    <!-- Trigger Levlel toggles -->
                    <Label FontFamily="Segoe UI" 
                           Grid.Row="6" 
                           HorizontalAlignment="Center" 
                           FontWeight="SemiBold">
                        
                        Trigger Levels:
                    </Label>
                    
                    <Grid Grid.Row="7"
                          RowDefinitions="*,*" 
                          ColumnDefinitions="*,Auto">
                        <TextBlock Grid.Row="0" 
                                   Grid.Column="0"
                                   VerticalAlignment="Center">
                            Upper Level
                        </TextBlock>
                        
                        <CheckBox Grid.Row="0" 
                                  Grid.Column="1"
                                  IsChecked="{Binding UpperTrigChecked}"></CheckBox>
                        
                        <TextBlock Grid.Row="1" 
                                   Grid.Column="0"
                                   VerticalAlignment="Center">
                            Lower Level
                        </TextBlock>
                        
                        <CheckBox Grid.Row="1" 
                                  Grid.Column="1"
                                  IsChecked="{Binding LowerTrigChecked}"></CheckBox>
                    </Grid>
                    
                    <!-- Listing of all available variables -->
                    <Label FontFamily="Segoe UI" 
                           Grid.Row="8" 
                           HorizontalAlignment="Center" 
                           FontWeight="SemiBold"
                           Margin="0,10,0,0">
                        
                        Plotted Variables:
                    </Label>
                    
                    <ScrollViewer Grid.Row="9"
                                  Margin="5,10,5,15">
                        <ItemsControl ItemsSource="{Binding Variables}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid ColumnDefinitions="*,Auto">
                                        <TextBox Grid.Column="0"
                                                   FontSize="16"
                                                   VerticalAlignment="Center"
                                                   BorderThickness="0"
                                                   Background="Transparent"
                                                   Margin="0,0,5,0"
                                                   Text="{Binding Name}"/>
                                        <CheckBox Grid.Column="1"
                                                  Margin="0,0,10,0"
                                                  IsChecked="{Binding IsChecked}"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </TabItem>
        </TabControl>
    </Border>
    
</UserControl>